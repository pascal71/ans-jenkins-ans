- name: Facts
  block:
    - name: Get instances info
      ec2_instance_info:
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"
        region: "{{ region }}"
      register: result

    - name: Upload public key to AWS
      ec2_key:
        name: "{{ key_name }}"
        key_material: "{{ lookup('file', '/home/pascal/.ssh/{{ key_name }}.pub') }}"
        region: "{{ region }}"
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"

    - name: Create security group
      ec2_group:
        name: "{{ sec_group }}"
        description: "Sec group for app {{ id }}"
        # vpc_id: 12345
        region: "{{ region }}"
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on ssh port
          - proto: tcp
            ports:
              - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on ssh port
          - proto: tcp
            ports:
              - 8080
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on ssh port
      register: result_sec_group

    - name: Provision instance(s)
      ec2:
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"
        key_name: "{{ key_name }}"
        instance_tags:
          tag_id: "{{ id }}"
        group_id: "{{ result_sec_group.group_id }}"
        image: "{{ image }}"
        instance_type: t2.large
        region: "{{ region }}"
        wait: true
        count: 1
      register: ec2


    - name: Add EC2 instance to inventory group
      add_host:
        hostname: "{{ item.public_dns_name }}"
        groupname: jenkins_master
        ansible_user: ec2-user
        ansible_ssh_private_key_file: /home/pascal/.ssh/id_rsa
      with_items: "{{ ec2.instances }}"

    - name: Wait for deploy to settle
      wait_for_connection:
        delay: 60
        timeout: 300

    - name: Register host for ssh access
      shell: ssh-keyscan {{ item.public_dns_name }}  >> ~/.ssh/known_hosts
      loop: "{{ ec2.instances }}"
      loop_control:
        label: "ssh-keyscan: {{ item.public_dns_name }}"
